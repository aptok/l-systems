* L-Systems
[cite/s/v:@Prusinkiewicz1990-ht]. 

  #+begin_src R :tangle lsystem.r
    lsystem  <- function(alphabet, axiom, productions) {

        derivation  <- function(axiom, new_word) {
            a <- substring(axiom,1,1)
            if (a  == "") {
                new_word
            } else derivation(substring(axiom,2),
                              paste(new_word,
                                    productions[a],
                                    sep=""))
        }

        derive_n  <- function(axiom, n) {
            if (n == 0) {
                axiom
            } else derive_n(derivation(axiom, ""),
                            n - 1)
        }

        function(n) {
            derive_n(axiom, n)
        }
    }

    lsystem_iter <- function(alphabet, axiom, productions) {
        function(n) {
            new_word <- ""
            while (n > 0) {
                for (char in as.list(strsplit(axiom,""))[[1]]) {
                    new_word  <- paste(new_word,
                                       productions[char],
                                       sep="")
                }
                n <- n - 1
                axiom <- new_word
                new_word <- ""
            }
            axiom
        }
    }

  #+end_src

* The Turtle Interpreter
  #+begin_src R :tangle turtle.r
    turtle <- function(x, y, alpha, stepsize, delta) {

        forward <- function() {
            x <<- x + stepsize * cos(alpha)
            y <<- y + stepsize * sin(alpha)
        }

        forward_draw <- function() {
            linesxy$x1 <<- c(x, linesxy$x1)
            linesxy$y1 <<- c(y, linesxy$y1)
            forward()
            linesxy$x2 <<- c(x, linesxy$x2)
            linesxy$y2 <<- c(y, linesxy$y2)
        }

        turn_right <- function() {
            alpha <<- alpha - delta
        }

        turn_left <- function() {
            alpha <<- alpha + delta
        }

        linesxy <- list(x1=c(),x2=c(),y1=c(),y2=c())

        function_table <-
            list("F" = forward_draw,
                 "f" = forward,
                 "-" = turn_right,
                 "+" = turn_left)

        rec_over_nu <- function(nu) {
            if (nu == "") {
                linesxy
            } else {
                function_table[[substring(nu,1,1)]]()
                rec_over_nu(substring(nu,2))
            }
        }

        iter_over_nu <- function(nu) {
            while (nu != "") {
                function_table[[substring(nu,1,1)]]()
                nu <- substring(nu,2)
            }
            linesxy
        }

        function(nu) {
                                            # rec_over_nu(nu)
            iter_over_nu(nu)
        }
    }
  #+end_src

  #+begin_src R :tangle draw-turtle.r
    draw_turtle <- function(lines) {
        if (length(lines$x1) == 0) {
            TRUE
        } else {
            lines(x=c(lines$x1[1], lines$x2[1]), y=c(lines$y1[1], lines$y2[1]))
            draw_lines(list(x1=lines$x1[-1],
                            x2=lines$x2[-1],
                            y1=lines$y1[-1],
                            y2=lines$y2[-1]))
        }
    }


    draw_turtle_iter <- function(lines) {
        while (length(lines$x1) != 0) {
            lines(x=c(lines$x1[1], lines$x2[1]), y=c(lines$y1[1], lines$y2[1]))
            lines$x1 <- lines$x1[-1]
            lines$x2 <- lines$x2[-1]
            lines$y1 <- lines$y1[-1]
            lines$y2 <- lines$y2[-1]
        }
    }
  #+end_src

* The Koch Curve
  #+begin_src R :tangle koch-curve.r
    source("lsystem.r")
    source("turtle.r")
    source("draw-turtle.r")
    dict <- c("F" = "F-F+F+FF-F-F+F", "+" = "+", "-" = "-", "f" = "f")
    plot.new()
    draw_turtle_iter(
        turtle(0.5,0.5,pi,.006,0.5*pi)
        (lsystem_iter("Ff+-", "F-F-F-F", dict)
            (2)))
  #+end_src
* Links
[[http://algorithmicbotany.org]] 

* Literature
#+print_bibliography:
* config :noexport:
#+PROPERTY: :eval never-export
#+LANGUAGE:  de
#+TITLE: L-Systems in R
#+OPTIONS:   H:4 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LaTeX_CLASS: scrartcl
#+LaTeX_CLASS_OPTIONS: [hidelinks,12pt,a4paper,titlepage]
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fontspec}
#+LATEX_HEADER: \usepackage{unicode-math}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \newfontfamily\listingsfont[Scale=0.85]{FreeSans.ttf}
#+LATEX_HEADER: \lstset{basicstyle=\footnotesize\ttfamily, breaklines=true, frame=single, keywordstyle=\listingsfont\bfseries, stringstyle=\ttfamily, commentstyle=\ttfamily, showstringspaces=false}
#+LATEX_HEADER: \usepackage[ngerman]{babel}
##+LATEX_HEADER: \setmainfont{unicode.joanna.ttf}
;;#+LATEX_HEADER: \setmathfont{XITS Math}
##+LATEX_HEADER: \setsansfont{Vollkorn-Regular.ttf}
#+LATEX_HEADER: \addtokomafont{pagenumber}{\small \sffamily}
#+LATEX_HEADER: \setkomafont{author}{\sffamily}
#+LATEX_HEADER: \setkomafont{date}{\sffamily}
#+LATEX_HEADER: \author{Alexander Ptok}
#+LATEX_HEADER: \usepackage{scrlayer-scrpage}
#+LATEX_HEADER: \pagestyle{scrheadings}
#+LATEX_HEADER: \lohead{Alexander Ptok}
#+LATEX_HEADER: \cohead{$\lambda$}
#+LATEX_HEADER: \rohead{\today}
#+LATEX_HEADER: \lofoot{}
#+LATEX_HEADER: \cofoot{\thepage\ von \pageref{LastPage}}
#+LATEX_HEADER: \rofoot{}
#+LATEX_HEADER: \setheadsepline{0.4pt}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\scriptsize}
#+bibliography: l-systems-in-r.bib
